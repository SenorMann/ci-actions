description: >
  This job bumps the version of your Node project and uploads a build artifact to your specified NPM registry.

parameters:
  app-dir:
    type: string
    default: "~/project"
    description: Path to the directory containing your package.json file. Not needed if package.json lives in the root.
  dry_run:
    type: boolean
    default: false
    description: >
      This parameters indicates that you don't want npm to make any changes and that it should only report what it would have done.
  git_user_email:
    type: env_var_name
    default: GIT_USER_EMAIL
    description: >
      The email for the git account that performs the commit and tags from bumping version.

  git_user_name:
    type: env_var_name
    default: GIT_USER_NAME
    description: >
      The username for the git account that performs the commit and tags from bumping version.

  npm_registry:
    type: env_var_name
    default: NPM_REGISTRY
    description: >
      The NPM registry to upload your build artifact to.

  npm_registry_auth:
    type: env_var_name
    default: NPM_REGISTRY_AUTH
    description: >
      The authentication token for the specified NPM registry account

  npm_registry_email:
    type: env_var_name
    default: NPM_REGISTRY_EMAIL
    description: >
      The email address for the specified NPM registry account.

  node_version:
    type: string
    default: lts
    description: >
      Pick a specific cimg/node image version tag: https://hub.docker.com/r/cimg/node. Defaults to current LTS.

executor:
  name: default
  tag: << parameters.node_version >>

steps:
  - checkout
  - run:
      name: Check files
      command: ls -al
  - run:
      name: Configure git username and email
      environment:
        GIT_USER_EMAIL: << parameters.git_user_email >>
        GIT_USER_NAME: << parameters.git_user_name >>
      command: <<include(scripts/configure-git.sh)>>
  - run:
      name: Bump project version and upload artifact
      working_directory: << parameters.app-dir >>
      environment:
        DRY_RUN: << parameters.dry_run >>
        NPM_REGISTRY: << parameters.npm_registry >>
        NPM_REGISTRY_AUTH: << parameters.npm_registry_auth >>
        NPM_REGISTRY_EMAIL: << parameters.npm_registry_email >>
      command: |
        #!/bin/bash

        shopt -s nocasematch


        echo $BASH_ENV

        get_bump_type() {
          commit_msg=$(git log -1 --pretty=%B)
          if [[ "$commit_msg" =~ .*"[skip ci] Upgrade to ".* ]]; then
            echo ""
          elif [[ "$commit_msg" =~ .*"BREAKING CHANGE".* ]]; then
            echo "major"
          elif [[ "$commit_msg" =~ .*"feature/".* ]]; then
            echo "minor"
          else
            echo "patch"
          fi
        }

        NPM_REGISTRY=$(eval echo "\$$NPM_REGISTRY")


        bump_type=$(get_bump_type)

        if [[ -n "$bump_type" ]]; then
          echo "ENV VARSSS"
          echo "$NPM_REGISTRY"
          echo "_+_________++++++++++"
          echo "${NPM_REGISTRY}"
          echo "END ECHO"
          npm version "$bump_type" -m "[skip ci] Upgrade to %s"
          npm shrinkwrap && npm ci
          { 
            echo always-auth=true
            echo _auth="$NPM_REGISTRY_AUTH"
            echo email="$NPM_REGISTRY_EMAIL"
            echo registry="$NPM_REGISTRY"
          } >> .npmrc
        
          if [[ "$DRY_RUN" == "1" ]]; then
            npm publish --dry-run
          else
            git push && git push --tags
            npm publish
          fi
        fi
